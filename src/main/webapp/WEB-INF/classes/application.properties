# @see https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------

# LOGGING
logging.level.org.seasar=TRACE
#logging.level.bitronix=TRACE
logging.level.org.springframework.boot.bind=TRACE
logging.level.org.springframework.transaction.jta=DEBUG
logging.level.org.springframework.jdbc.datasource=DEBUG
#logging.level.org.springframework.security: DEBUG
logging.level.org.springframework.boot.actuate.audit.listener.AuditListener: DEBUG
logging.level.org.apache.jasper.servlet.TldScanner=INFO
logging.level.org.apache.tomcat.util.scan.StandardJarScanner=ERROR
logging.level.jp.ecom_plat.saigaitask=DEBUG

# INTERNATIONALIZATION (MessageSourceAutoConfiguration)
spring.messages.basename=messages
spring.messages.cache-seconds=-1
spring.messages.encoding=UTF-8

# ----------------------------------------
# SaigaiTask TIMER PROPERTIES
# ----------------------------------------
# every 1minutes
saigaitask.timer.meteoricAlarmService.enable=false
saigaitask.timer.meteoricAlarmService.cron=0 * * * * *
saigaitask.timer.jAlertAlarmService.enable=false
saigaitask.timer.jAlertAlarmService.cron=30 * * * * *
saigaitask.timer.telemeterService.enable=false
saigaitask.timer.telemeterService.cron=0 * * * * *
saigaitask.timer.riskJudgeService.enable=false
saigaitask.timer.riskJudgeService.cron=30 * * * * *

# ----------------------------------------
# DATA PROPERTIES
# ----------------------------------------

# FLYWAY (FlywayProperties)
#spring.flyway.baseline-description= #
spring.flyway.baseline-version=0
spring.flyway.baseline-on-migrate=true
#spring.flyway.check-location=false # Check that migration scripts location exists.
#spring.flyway.clean-on-validation-error= #
spring.flyway.enabled=true
#spring.flyway.encoding= #
#spring.flyway.ignore-failed-future-migration= #
#spring.flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.
spring.flyway.locations=classpath:data/sql
spring.flyway.out-of-order=true
#spring.flyway.password= # JDBC password if you want Flyway to create its own DataSource
#spring.flyway.placeholder-prefix= #
#spring.flyway.placeholder-replacement= #
#spring.flyway.placeholder-suffix= #
#spring.flyway.placeholders.*= #
#spring.flyway.schemas= # schemas to update
#spring.flyway.sql-migration-prefix=V #
#spring.flyway.sql-migration-separator= #
#spring.flyway.sql-migration-suffix=.sql #
#spring.flyway.table= #
#spring.flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.
#spring.flyway.user= # Login user of the database to migrate.
spring.flyway.validate-on-migrate=false


# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error=false # Do not stop if an error occurs while initializing the database.
#spring.datasource.data= # Data (DML) script resource references.
#spring.datasource.data-username= # User of the database to execute DML scripts (if different).
#spring.datasource.data-password= # Password o	f the database to execute DML scripts (if different).
#spring.datasource.dbcp2.*= # Commons DBCP2 specific settings
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.generate-unique-name=false # Generate a random datasource name.
#spring.datasource.hikari.*= # Hikari specific settings
spring.datasource.initialize=true
#spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).
#spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.name=testdb # Name of the datasource.
spring.datasource.password=gicait123

#spring.datasource.platform=all # Platform to use in the schema resource (schema-${platform}.sql).
#spring.datasource.schema= # Schema (DDL) script resource references.
#spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).
#spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).
#spring.datasource.separator=; # Statement separator in SQL initialization scripts.
#spring.datasource.sql-script-encoding= # SQL scripts encoding.
#spring.datasource.tomcat.*= # Tomcat datasource specific settings
#spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
#spring.datasource.url=jdbc:postgresql://ec2-18-223-149-100.us-east-2.compute.amazonaws.com:5432/saigaitask?ApplicationName=saigaitask
#spring.datasource.username=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/dssv5?ApplicationName=saigaitask
spring.datasource.username=mapuser  
#ec2-18-222-68-104.us-east-2
spring.datasource.xa.data-source-class-name=org.seasar.extension.dbcp.impl.XADataSourceImpl
#spring.datasource.xa.properties.server-name=192.168.136.177
#spring.datasource.xa.properties.port-number=45432

#spring.jta.bitronix.datasource.driver-properties.url=jdbc:postgresql://192.168.136.177:45432/test_s2jdbc
bitronix.tm.timer.defaultTransactionTimeout=6000
#spring.jta.bitronix.properties.log-part1-filename=./transaction-logs/part1.btm
#spring.jta.bitronix.properties.log-part2-filename=./transaction-logs/part2.btm
# STS \u3067 catalina.home \u306f /Users/<user>/AppData/Local/Temp/tomcat.<random>.8080
spring.jta.bitronix.properties.log-part1-filename=${catalina.home}/logs/btm1.tlog
spring.jta.bitronix.properties.log-part2-filename=${catalina.home}/logs/btm2.tlog


# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.servlet.context-path=/SaigaiTask
#server.port=8080

# SPRING MVC (WebMvcProperties)
spring.mvc.view.prefix: /WEB-INF/view/
spring.mvc.view.suffix: .jsp

# MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled=true
#spring.servlet.multipart.file-size-threshold=0 # Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
#spring.servlet.multipart.location= # Intermediate location of uploaded files.
## Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.max-file-size=500MB
## Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.max-request-size=600MB
#spring.servlet.multipart.resolve-lazily=false # Whether to resolve the multipart request lazily at the time of file or parameter access.

# SPRING RESOURCES HANDLING (ResourceProperties)
#spring.resources.add-mappings=true # Whether to enable default resource handling.
#spring.resources.cache.cachecontrol.cache-private= # Indicate that the response message is intended for a single user and must not be stored by a shared cache.
#spring.resources.cache.cachecontrol.cache-public= # Indicate that any cache may store the response.
#spring.resources.cache.cachecontrol.max-age= # Maximum time the response should be cached, in seconds if no duration suffix is not specified.
#spring.resources.cache.cachecontrol.must-revalidate= # Indicate that once it has become stale, a cache must not use the response without re-validating it with the server.
#spring.resources.cache.cachecontrol.no-cache= # Indicate that the cached response can be reused only if re-validated with the server.
#spring.resources.cache.cachecontrol.no-store= # Indicate to not cache the response in any case.
#spring.resources.cache.cachecontrol.no-transform= # Indicate intermediaries (caches and others) that they should not transform the response content.
#spring.resources.cache.cachecontrol.proxy-revalidate= # Same meaning as the "must-revalidate" directive, except that it does not apply to private caches.
#spring.resources.cache.cachecontrol.s-max-age= # Maximum time the response should be cached by shared caches, in seconds if no duration suffix is not specified.
#spring.resources.cache.cachecontrol.stale-if-error= # Maximum time the response may be used when errors are encountered, in seconds if no duration suffix is not specified.
#spring.resources.cache.cachecontrol.stale-while-revalidate= # Maximum time the response can be served after it becomes stale, in seconds if no duration suffix is not specified.
# Cache period for the resources served by the resource handler. If a duration suffix is not specified, seconds will be used.
spring.resources.cache.period=300
#spring.resources.chain.cache=true # Whether to enable caching in the Resource chain.
#spring.resources.chain.enabled= # Whether to enable the Spring Resource Handling chain. By default, disabled unless at least one strategy has been enabled.
#spring.resources.chain.gzipped=false # Whether to enable resolution of already gzipped resources.
#spring.resources.chain.html-application-cache=false # Whether to enable HTML5 application cache manifest rewriting.
#spring.resources.chain.strategy.content.enabled=false # Whether to enable the content Version Strategy.
#spring.resources.chain.strategy.content.paths=/** # Comma-separated list of patterns to apply to the content Version Strategy.
#spring.resources.chain.strategy.fixed.enabled=false # Whether to enable the fixed Version Strategy.
#spring.resources.chain.strategy.fixed.paths=/** # Comma-separated list of patterns to apply to the fixed Version Strategy.
#spring.resources.chain.strategy.fixed.version= # Version string to use for the fixed Version Strategy.
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ # Locations of static resources.

# ----------------------------------------
# ACTUATOR PROPERTIES
# ----------------------------------------

# ENDPOINTS (AbstractEndpoint subclasses)
endpoints.enabled=false
endpoints.hypermedia.enabled=true

# MANAGEMENT HTTP SERVER (ManagementServerProperties)
management.security.enabled=false
